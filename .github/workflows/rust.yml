name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_MSRV_TOOLCHAIN: 1.62.0

jobs:
  source-check:
    runs-on: ubuntu-latest

    permissions:
      checks: write
      contents: read

    steps:
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: clippy, rustfmt
        default: true
    - uses: actions/checkout@v4
    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features
    - uses: actions-rs/cargo@v1
      with:
        command: rustfmt
        args: --check

  cargo-doc-stable:
    runs-on: ubuntu-latest
    needs: source-check

    steps:
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        default: true
    - uses: actions/checkout@v4
    - uses: actions-rs/cargo@v1
      with:
        command: doc
        args: --verbose --all-features --no-deps

  cargo-doc-msrv:
    runs-on: ubuntu-latest
    needs: source-check

    steps:
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: $RUST_MSRV_TOOLCHAIN
        default: true
    - uses: actions/checkout@v4
    - uses: actions-rs/cargo@v1
      with:
        command: doc
        args: --verbose --all-features --no-deps

  test-stable-all-features:
    runs-on: ubuntu-latest
    needs: source-check

    steps:
    - uses: jlumbroso/free-disk-space@main
      with:
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: false
        tool-cache: false
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        default: true
    - uses: actions-rs/cargo@v1
      with:
        command: install
        args: cargo-all-features
    - uses: actions/checkout@v4
    - run: ./rqlite/install.sh
    - uses: actions-rs/cargo@v1
      with:
        command: test-all-features

  test-msrv-all-features:
    runs-on: ubuntu-latest
    needs: source-check

    steps:
    - uses: jlumbroso/free-disk-space@main
      with:
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: false
        tool-cache: false
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: $RUST_MSRV_TOOLCHAIN
        default: true
    - uses: actions-rs/cargo@v1
      with:
        command: install
        args: cargo-all-features
    - uses: actions/checkout@v4
    - run: ./rqlite/install.sh
    - run: ./test-features.sh

  build-stable:
    runs-on: ubuntu-latest
    needs: source-check

    steps:
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        default: true
    - uses: actions/checkout@v4
    - uses: actions-rs/cargo@v1
      with:
        command: build
        args: --verbose --release

  build-msrv:
    runs-on: ubuntu-latest
    needs: build-stable

    steps:
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: $RUST_MSRV_TOOLCHAIN
        default: true
    - uses: actions/checkout@v4
    - uses: actions-rs/cargo@v1
      with:
        command: build
        args: --verbose --release
